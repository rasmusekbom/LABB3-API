// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rasmus_labb3_API.Contexts;

namespace Rasmus_labb3_API.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20220430100459_FirstInit")]
    partial class FirstInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Rasmus_labb3_Models.Interest", b =>
                {
                    b.Property<int>("InterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InterestId");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            InterestId = 1,
                            Description = "Amazing world down there.",
                            Title = "Scuba Diving"
                        },
                        new
                        {
                            InterestId = 2,
                            Description = "Compete against yourself!",
                            Title = "Golf"
                        },
                        new
                        {
                            InterestId = 3,
                            Description = "The earth is your backyard.",
                            Title = "Hiking"
                        },
                        new
                        {
                            InterestId = 4,
                            Description = "Gotta score em' goals.",
                            Title = "Football"
                        });
                });

            modelBuilder.Entity("Rasmus_labb3_Models.Link", b =>
                {
                    b.Property<int>("LinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<string>("LinkUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LinkId");

                    b.HasIndex("InterestId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            LinkId = 1,
                            InterestId = 1,
                            LinkUrl = "www.scubadiving.se"
                        },
                        new
                        {
                            LinkId = 2,
                            InterestId = 2,
                            LinkUrl = "www.golf.se"
                        },
                        new
                        {
                            LinkId = 3,
                            InterestId = 3,
                            LinkUrl = "www.hiking.se"
                        },
                        new
                        {
                            LinkId = 4,
                            InterestId = 4,
                            LinkUrl = "www.football.se"
                        });
                });

            modelBuilder.Entity("Rasmus_labb3_Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNr")
                        .HasColumnType("int");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Name = "Rasmus Ekbom",
                            PhoneNr = 706899532
                        },
                        new
                        {
                            PersonId = 2,
                            Name = "Anitra Ngoensuwan",
                            PhoneNr = 701234567
                        },
                        new
                        {
                            PersonId = 3,
                            Name = "Fredrik Olsson",
                            PhoneNr = 709876645
                        });
                });

            modelBuilder.Entity("Rasmus_labb3_Models.PersonInterest", b =>
                {
                    b.Property<int>("PersonInterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("PersonInterestId");

                    b.HasIndex("InterestId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonInterests");

                    b.HasData(
                        new
                        {
                            PersonInterestId = 1,
                            InterestId = 1,
                            PersonId = 1
                        },
                        new
                        {
                            PersonInterestId = 2,
                            InterestId = 2,
                            PersonId = 2
                        },
                        new
                        {
                            PersonInterestId = 3,
                            InterestId = 3,
                            PersonId = 3
                        },
                        new
                        {
                            PersonInterestId = 4,
                            InterestId = 1,
                            PersonId = 3
                        },
                        new
                        {
                            PersonInterestId = 5,
                            InterestId = 1,
                            PersonId = 2
                        },
                        new
                        {
                            PersonInterestId = 6,
                            InterestId = 3,
                            PersonId = 1
                        },
                        new
                        {
                            PersonInterestId = 7,
                            InterestId = 2,
                            PersonId = 3
                        });
                });

            modelBuilder.Entity("Rasmus_labb3_Models.Link", b =>
                {
                    b.HasOne("Rasmus_labb3_Models.Interest", "Interest")
                        .WithMany("Links")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Rasmus_labb3_Models.PersonInterest", b =>
                {
                    b.HasOne("Rasmus_labb3_Models.Interest", "Interest")
                        .WithMany("PersonInterests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rasmus_labb3_Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
